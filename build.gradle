buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


plugins {
    id "com.palantir.docker" version "0.21.0"
    id "com.adarshr.test-logger" version "1.6.0"
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'
apply plugin: 'io.spring.dependency-management'


task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}

group = 'uc'
sourceCompatibility = '1.8'

docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

repositories {
    mavenCentral()
}

sourceSets {
    e2eTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/e2eTest/java')
        }
        resources.srcDir file('src/e2eTest/resources')
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

task e2eTest(type: Test) {
    testClassesDirs = sourceSets.e2eTest.output.classesDirs
    classpath = sourceSets.e2eTest.runtimeClasspath
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    e2eTestCompile.extendsFrom testCompile
    e2eTestRuntime.extendsFrom testRuntime
    e2eTestImplementation.extendsFrom testImplementation
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    developmentOnly("org.springframework.boot:spring-boot-devtools")
}